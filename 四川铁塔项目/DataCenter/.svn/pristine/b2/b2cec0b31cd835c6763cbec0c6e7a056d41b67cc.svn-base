package com.function.index.greyList;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.function.index.risk.RiskControlTable;
import com.systemConfig.model.DataTableResult;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller("com.function.index.greyList.GreyListApplyAction")
@RequestMapping(value="/greyListApplyAction")
public class GreyListApplyAction {
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	private static String resUserName = "TOWERCRNOP";
	
	/**
	 * 获取数据来源后的下拉菜单
	 * */
	@RequestMapping(value="/findSelectOptionsFirst.ilf")
	public void findSelectOptionsFirst(@RequestParam String value,HttpServletRequest request,HttpServletResponse response) throws Exception {
		JSONObject jsonObject= JSONObject.fromObject("{success:true}");
		String sql="";
		try {
			if(value.equals("1")) {
				sql="";
				sql+="SELECT A.ID,A.DATA ";
				sql+="FROM COMPARE_SUMMARY2 A ";
				sql+="where A.CITY_NAME='宜宾' and A.MONTH='2018-08-01' ";
				sql+="group by A.ID,A.DATA order by TO_NUMBER(A.ID) ASC ";
				List<Map<String, Object>>list01=jdbcTemplate.queryForList(sql);
				jsonObject.put("list", list01);
			}else if(value.equals("2")) {
				sql="";
				sql+="select ID,RISK_NAME,RISK_TYPE from "+resUserName+".ORC_RISK_NAME_DETAIL order by RISK_TYPE,ID";
				List<Map<String, Object>>list02=jdbcTemplate.queryForList(sql);
				jsonObject.put("list", list02);
			}
		} catch (Exception e) {
			jsonObject= JSONObject.fromObject("{success:false}");
			e.printStackTrace();
		}finally {
			System.out.println(jsonObject.toString());
			response.setContentType("application/json; charset=UTF-8");
			response.getWriter().print(jsonObject.toString());
		}
		
	}
	
	@RequestMapping(value="/findSelectOptionsSecond.ilf")
	public void findSelectOptionsSecond(@RequestParam String value,@RequestParam String type,HttpServletRequest request,HttpServletResponse response) throws Exception {
		JSONObject jsonObject=JSONObject.fromObject("{success:true}");
		String sql="";
		if(type.equals("在线风控")) {
			sql="select ID,QU_TYPE from "+resUserName+".ORC_QU_TYPE_DETAIL where RISK_NAME='"+value+"'";
			List<Map<String, Object>> list=jdbcTemplate.queryForList(sql);
			jsonObject.put("list", list);
		}else if(type.equals("SC")) {
			
		}
		response.setContentType("application/json; charset=UTF-8");
		response.getWriter().print(jsonObject.toString());
	}
	
	
	@RequestMapping("/findTableData.ilf")
	public void findTableData(@RequestParam String tableparam,@RequestParam String conditions,@RequestParam String select01,@RequestParam String select02,@RequestParam String select03,HttpServletRequest request,HttpServletResponse response)throws Exception{
		Long sEcho = 0L;
		Integer displayStart = 0;
		Integer iDisplayLength = 0;
		JSONArray jsons = JSONArray.fromObject(tableparam);
		HashMap<String,Object> conditionMap = new HashMap<String,Object>();
		if(jsons!=null && jsons.size()!=0){
			for(int i=0;i<jsons.size();i++){
				JSONObject json = JSONObject.fromObject(jsons.get(i));
				String key = json.getString("name");
				if(key.equals("sEcho")){
					sEcho = Long.parseLong(json.getString("value"));
				}else if(key.equals("iDisplayStart")){
					displayStart = Integer.parseInt(json.getString("value"));
					conditionMap.put("iDisplayStart",displayStart);
				}else if(key.equals("iDisplayLength")){
					iDisplayLength = Integer.parseInt(json.getString("value"));
					conditionMap.put("iDisplayLength",iDisplayLength);
				}
			}
		}
		JSONArray condition = JSONArray.fromObject(conditions);
		if(conditions!=null && condition.size()!=0){
			for(int i=0;i<condition.size();i++){
				JSONObject jsonObject = JSONObject.fromObject(condition.get(i));
				if(jsonObject.get("value")!=null && !"".equals(jsonObject.getString("value"))){
					conditionMap.put(jsonObject.getString("name"),jsonObject.getString("value"));
				}
			}
		}
		/*检索搜索参数*/
		String searchDate="";
		if(conditionMap.containsKey("DATE") && !"".equals(conditionMap.get("DATE").toString())) {
			searchDate=conditionMap.get("DATE").toString();
		}
		/*获取问题集合*/
		Boolean isProvince = false;
		String belongArea = "";
		Object loginObject = request.getSession().getAttribute("LoginUserInfo");
		if(loginObject!=null){
			Map<String,Object> loginUser = (HashMap<String,Object>)loginObject;
			if(loginUser.get("BELONG_AREA").toString().indexOf("四川")!=-1){
				isProvince = true;
				belongArea = loginUser.get("BELONG_AREA").toString();
			}else{
				belongArea = loginUser.get("BELONG_AREA").toString();
			}
			if(belongArea.length()>2){
				belongArea = belongArea.substring(0,2);
			}
		}
		String sql="";
		if(select01.equals("1")) {
			sql="SELECT C.* FROM COMPARE_DATA C WHERE C.BELONG_MONITOR IN(";
			sql+=" SELECT ID AS MONITOR_ID FROM COMPARE_MONITOR WHERE ID IN(";
			sql+=" SELECT MONITOR_ID FROM COMPARE_SUMMARY1 WHERE DATA = '"+select02+"'";
			if(!isProvince) {
				sql+=" and CITY_NAME='"+belongArea+"' ";
				if(!searchDate.equals("")) {
					sql+=" and C_DATE like '%"+searchDate+"%' ";
				}
			}
			sql+=")";	
			sql+=") ";
			if(!isProvince) {
				sql+="AND C.DATA_CITY = '"+belongArea+"' ";
			}
			sql+="AND C.PROBLEM_TYPE = '"+select03+"' ";
		}else if(select01.equals("2")) {
			if(select02.equals("60")) {
				sql="select ID,to_char(MOUTH,'yyyy-MM') as MOUTH,CITY,CON_NUMBER as NUMBER1,CON_NAME as NAME1 from "+resUserName+".ORC_CGI_DETAIL where QU_TYPE="+select03+" and GL_STATUS is null";
			}else {
				sql="select ID,to_char(MOUTH,'yyyy-MM') as MOUTH,CITY,STA_NUMBER as NUMBER1,STA_NAME as NAME1 from "+resUserName+"."+RiskControlTable.getValueByKey(select02)+" where QU_TYPE="+select03+" and GL_STATUS is null";
			}
			if(!isProvince) {
				sql+=" and CITY='"+belongArea+"'";
				if(!searchDate.equals("")) {
					sql+=" and MOUTH='"+searchDate+"'";
				}
			}
		}
	
		Integer count = jdbcTemplate.queryForInt("SELECT COUNT(1) FROM("+sql+")");
		Integer lastIndex = displayStart+iDisplayLength;
		String pageSql = "";
		pageSql+="SELECT B.* FROM(";
		pageSql+="	SELECT A.*,ROWNUM AS RN FROM("+sql+") A WHERE ROWNUM <= "+lastIndex;
		pageSql+=") B WHERE B.RN > "+displayStart;
		List<Map<String,Object>> objectList = jdbcTemplate.queryForList(pageSql);
		DataTableResult<Map<String,Object>> tableData = new DataTableResult<Map<String,Object>>();
		tableData.setsEcho(sEcho);
		tableData.setAaData(objectList);
		tableData.setiTotalRecords(count);
		tableData.setiTotalDisplayRecords(count);
		response.setContentType("application/json; charset=UTF-8");
		response.getWriter().print(JSONObject.fromObject(tableData).toString());
	}
	
	
	/* 
	 
	@RequestMapping(value="/.ilf")
	public void findDetail(HttpServletRequest request,HttpServletResponse response,String riskType,String city,String mouth) throws Exception {
		
	}
	*/
}
