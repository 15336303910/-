Ext.namespace("com.increase.cen.poleline");
var limit = null;
com.increase.cen.poleline.EditWindow = Ext.extend(Ext.form.FormPanel,{
	bodyStyle:"padding:5px;",
	frame:true,
	bodyBorder:false,
	labelAlign:"right",
	buttonAlign:'center',
	labelWidth:120,
	width:800,
	height:350,
	initComponent:function(config){
		limit = Ext.getDom("limit").value;
		Ext.QuickTips.init();
		Ext.form.Field.prototype.msgTarget = 'qtip';
		var idIsExist = true;
    	var zeroRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:"checkItem.editType",
					name:"checkItem.editType",
					xtype:'combo',
					typeAhead:true,
		        	triggerAction:'all',
					fieldLabel:"编辑类型",
					emptyText:"请选择编辑类型",
					blankText:'编辑类型不能为空',
					forceSelection:true,
		         	mode:'remote',
		         	store:new Ext.data.JsonStore({
		    			url:"checkConfigAction!findEditTypes.action",
		    			fields:["editCode","editName"]
		    		}),
		        	width:330,
		         	valueField:'editCode', 
		       		displayField:'editName',
		       		hiddenName:'checkItem.editType',
		       		editable:false
				}]
			}]
		}
		var firstRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:'checkItem.id',
					name:"checkItem.id",
					xtype:'hidden'
				},{
					id:'checkItem.itemDesc',
					name:"checkItem.itemDesc",
					xtype:'textfield',
					fieldLabel:"核查内容",
					allowBlank:false,
					blankText:'核查内容不能为空',
					emptyText:"请输入核查内容",
					width:330
				}]
			}]
		}
    	this.levelStore = new Ext.data.SimpleStore({
    		fields:['value','text'],
    		data:[
    		   ['C001','站点'],
    		   ['C002','机房']
    		]
    	})
    	var secondRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:"checkItem.belongDimension",
					name:"checkItem.belongDimension",
					xtype:'combo',
					typeAhead:true,
		        	triggerAction:'all',
					fieldLabel:"所属维度",
					emptyText:"请选择所属维度",
					blankText:'所属维度不能为空',
					allowBlank:false,
					forceSelection:true,
		         	mode:'remote',
		         	store:new Ext.data.JsonStore({
		    			url:"hcgdManageAction!getResourceTypes.action",
		    			fields:["resourceCode","resourceName"]
		    		}),
		        	width:330,
		         	valueField:'resourceCode', 
		       		displayField:'resourceName',
		       		hiddenName:'checkItem.belongDimension',
		       		editable:false
				}]
			}]
		}
		this.usingStore = new Ext.data.SimpleStore({
    		fields:['value','text'],
    		data:[
    		   ['Y','核查'],
    		   ['N','展示']
    		]
    	})
    	var thirdRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:"checkItem.isUsing",
					name:"checkItem.isUsing",
					xtype:'combo',
					typeAhead:true,
		        	triggerAction:'all',
					fieldLabel:"核查/展示",
					emptyText:"请选择核查/展示",
					blankText:'核查/展示不能为空',
					forceSelection:true,
		         	mode:'local',
		        	width:330,
		         	store:this.usingStore,
		         	valueField:'value', 
		       		displayField:'text',
		       		hiddenName:'checkItem.isUsing',
		       		editable:false
				}]
			}]
		}
		this.denyStore = new Ext.data.SimpleStore({
    		fields:['value','text'],
    		data:[
    		   ['Y','是'],
    		   ['N','否']
    		]
    	})
    	var forthRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:"checkItem.isDenyAll",
					name:"checkItem.isDenyAll",
					xtype:'combo',
					typeAhead:true,
		        	triggerAction:'all',
					fieldLabel:"级联否定",
					emptyText:"请选择级联否定",
					blankText:'级联否定不能为空',
					forceSelection:true,
		         	mode:'local',
		        	width:330,
		         	store:this.denyStore,
		         	valueField:'value', 
		       		displayField:'text',
		       		hiddenName:'checkItem.isDenyAll',
		       		editable:false
				}]
			}]
		}
		this.considerStore = new Ext.data.SimpleStore({
    		fields:['value','text'],
    		data:[
    		   ['Y','是'],
    		   ['N','否']
    		]
    	})
    	var fiveRow = {
			layout:'column',
			items:[{
				height:30,
				layout:'form',
				items:[{
					id:"checkItem.isConsider",
					name:"checkItem.isConsider",
					xtype:'combo',
					typeAhead:true,
		        	triggerAction:'all',
					fieldLabel:"是否参考",
					emptyText:"请选择是否参考",
					blankText:'是否参考不能为空',
					forceSelection:true,
		         	mode:'local',
		        	width:330,
		         	store:this.considerStore,
		         	valueField:'value', 
		       		displayField:'text',
		       		hiddenName:'checkItem.isConsider',
		       		editable:false
				}]
			}]
		}
		var sixRow = {
			layout:'column',
			items:[{
				columnWidth:.45,
				height:30,
				layout:'form',
				items:[{
					id:'checkItem.considerColumn',
					name:"checkItem.considerColumn",
					xtype:'textfield',
					fieldLabel:"工单资源字段",
					allowBlank:true,
					blankText:'',
					emptyText:'',
					width:110
				}]
			},{
				columnWidth:.55,
				height:30,
				layout:'form',
				labelWidth:100,
				items:[{
					id:'checkItem.resConsiderColumn',
					name:"checkItem.resConsiderColumn",
					xtype:'textfield',
					fieldLabel:"综资资源字段",
					allowBlank:true,
					blankText:'',
					emptyText:'',
					width:110
				}]
			}]
		}
		this.items = [{
			xtype:'fieldset',
			title:'核查内容 ',
			collapsible:true,
			items:[zeroRow,firstRow,secondRow,thirdRow,forthRow,fiveRow,sixRow]
		}];
		this.buttons = [{
			id:'addBtnSubmit',
			text:"保存",
			hidden:false,
			icon:"imgs/save_btn.png",
			cls:"x-btn-text-icon",
			tooltip:'保存核查内容',
			tooltipType:'qtip',
			handler:this.addBtnSubmit.createDelegate(this)
		},{
			xtype:'tbspacer'
		},{
			text:"返回",
			icon:"imgs/back.png",
			cls:"x-btn-text-icon",
			tooltip:'关闭此窗口',
			tooltipType:'qtip',
			handler:this.btnClose.createDelegate(this)
		}];
		com.increase.cen.poleline.EditWindow.superclass.initComponent.call(this);
	},
	/*保存*/
	addBtnSubmit:function(){
		var editTypeIsNull = Ext.getCmp("checkItem.editType").getValue();
		if(editTypeIsNull==null || editTypeIsNull==""){
			Ext.Msg.show({
				title:'提示',width:300,msg:'<img src="imgs/tip_success.png" align="center" hspace="30"/>请选择编辑类型!',
				buttons:{
					ok:"确定"
				}
			});
			return;
		}
		if(!this.getForm().isValid()){
			return;
		}
		var form = this.getForm();
		form.doAction("submit",{
			url:'checkConfigAction!insertModel.action',
			method:'post',
			submitEmptyText:false,
			success:function(form,action){
				Ext.Msg.show({
					title:'提示',
					width:300,
					msg:'<img src="imgs/tip_success.png" align="center" hspace="30" />编辑核查信息成功!',
					buttons:{
						ok:"确定"
					}
				});
				Ext.getCmp("thisEditForm").getForm().reset();
				Ext.getCmp('editFormWindow').close();
				Ext.getCmp('configDataGrid').getStore().load({
					params:{
						start:0,
						limit:limit
					}
				});
				Ext.getCmp('configDataGrid').getView().refresh();
			},
			failure:function(form,action){
				Ext.Msg.show({
					title:'提示',
					width:300,
					msg:'<img src="imgs/tip_error.png" align="center" hspace="30"/>编辑核查信息失败',
					buttons:{
						ok:"确定"
					}
				});
			}
		});
	},
	/*返回按钮*/
	btnClose:function(){
		Ext.getCmp("thisEditForm").getForm().reset();
		Ext.getCmp('editFormWindow').close();
		Ext.getCmp('configDataGrid').getStore().load({
			params:{
				start:0,
				limit:limit
			}
		});
	}
});
Ext.reg("editConfigType", com.increase.cen.poleline.EditWindow);
